<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cn.cms.dao.FragmentDao" >

    <resultMap id="base" type="com.cn.cms.po.Base">
        <id column="id" property="id" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
        <result column="del_tag" property="delTag" />
        <result column="last_modify_user_id" property="lastModifyUserId" />
    </resultMap>

    <resultMap type="com.cn.cms.po.Fragment" id="fragment" extends="base" >
        <result column="fragment_classify_id" property="fragmentClassifyId" />
        <result column="fragment_content" property="fragmentContent" />
        <result column="fragment_name" property="fragmentName" />
        <result column="sort_num" property="sortNum" />
        <result column="fragment_model" property="fragmentModel" />
    </resultMap>


    <sql id="delTag"> where del_tag = 1 </sql>

    <sql id="sql_column">
        id,create_time,update_time,del_tag,last_modify_user_id,fragment_classify_id,fragment_content,fragment_name,sort_num,fragment_model
    </sql>
    <sql id="sql_column_1">
        id,last_modify_user_id,fragment_classify_id,fragment_name
    </sql>

    <select id="queryFragmentCount" resultType="java.lang.Integer">
        select count(1) from fragment <include refid="delTag" />;
    </select>

    <select id="queryFragmentList" resultMap="fragment">
        select <include refid="sql_column_1" /> from fragment <include refid="delTag" /> limit ${page.start},${page.pageSize};
    </select>

    <select id="findFragment" resultMap="fragment">
        select <include refid="sql_column" /> from fragment <include refid="delTag" /> and id = ${id};
    </select>

    <update id="delFragment" >
        update  fragment set last_modify_user_id = #{lastModifyUserId}, del_tag = 0 where id = ${id}
    </update>

</mapper>