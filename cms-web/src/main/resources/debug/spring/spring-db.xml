<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd" default-autowire="byName">

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${crm_DB.driver}"/>
		<property name="jdbcUrl" value="${crm_DB.url}"/>
		<property name="user" value="${crm_DB.user}"/>
		<property name="password" value="${crm_DB.password}"/>
		<property name="initialPoolSize">
			<value>${c3p0.initialPoolSize}</value>
		</property>
		<property name="minPoolSize">
			<value>${c3p0.minPoolSize}</value>
		</property>
		<property name="maxPoolSize">
			<value>${c3p0.maxPoolSize}</value>
		</property>
		<property name="acquireIncrement">
			<value>${c3p0.acquireIncrement}</value>
		</property>
		<property name="maxIdleTime">
			<value>${c3p0.maxIdleTime}</value>
		</property>
		<property name="checkoutTimeout"><value>${c3p0.checkoutTimeout}</value></property>
		<property name="preferredTestQuery"><value>select 1</value></property>
	</bean>
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"  autowire="byName" />
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="do*" propagation="REQUIRED" rollback-for="Exception,com.cn.cms.exception.BizException"/>
			<tx:method name="create*" propagation="REQUIRED" rollback-for="Exception,com.cn.cms.exception.BizException"/>
			<tx:method name="update*" propagation="REQUIRED" rollback-for="Exception,com.cn.cms.exception.BizException"/>
			<tx:method name="commit*" propagation="REQUIRED" rollback-for="Exception,com.cn.cms.exception.BizException"/>
			<tx:method name="save*" propagation="REQUIRED" rollback-for="Exception,com.cn.cms.exception.BizException"/>
			<tx:method name="insert*" propagation="REQUIRED" rollback-for="Exception,com.cn.cms.exception.BizException"/>
			<tx:method name="delete*" propagation="REQUIRED" rollback-for="Exception,com.cn.cms.exception.BizException"/>
			<tx:method name="del*" propagation="REQUIRED" rollback-for="Exception,com.cn.cms.exception.BizException"/>
			<tx:method name="edit*" propagation="REQUIRED" rollback-for="Exception,com.cn.cms.exception.BizException"/>
			<tx:method name="get*" propagation="REQUIRED" rollback-for="Exception,com.cn.cms.exception.BizException" read-only="true"/>
			<tx:method name="find*" propagation="REQUIRED" rollback-for="Exception,com.cn.cms.exception.BizException" read-only="true"/>
			<tx:method name="query*" propagation="REQUIRED" rollback-for="Exception,com.cn.cms.exception.BizException" read-only="true"/>
			<tx:method name="*" propagation="SUPPORTS" rollback-for="Exception,com.cn.cms.exception.BizException"/>
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:advisor pointcut="execution(* com.cn.cms.service..*Service.*(..))" advice-ref="txAdvice"/>
	</aop:config>

	<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="typeAliasesPackage" value="com.cn.cms.po" />
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
	</bean>

	<!-- scan for mappers and let them be autowired -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.cn.cms.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryBean" />
	</bean>
</beans>