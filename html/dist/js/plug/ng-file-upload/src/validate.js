ngFileUpload.service("UploadValidate",["UploadDataUrl","$q","$timeout",function(UploadDataUrl,$q,$timeout){function globStringToRegex(str){var regexp="",excludes=[];if(str.length>2&&"/"===str[0]&&"/"===str[str.length-1])regexp=str.substring(1,str.length-1);else{var split=str.split(",");if(split.length>1)for(var i=0;i<split.length;i++){var r=globStringToRegex(split[i]);r.regexp?(regexp+="("+r.regexp+")",i<split.length-1&&(regexp+="|")):excludes=excludes.concat(r.excludes)}else 0===str.indexOf("!")?excludes.push("^((?!"+globStringToRegex(str.substring(1)).regexp+").)*$"):(0===str.indexOf(".")&&(str="*"+str),regexp="^"+str.replace(new RegExp("[.\\\\+*?\\[\\^\\]$(){}=!<>|:\\-]","g"),"\\$&")+"$",regexp=regexp.replace(/\\\*/g,".*").replace(/\\\?/g,"."))}return{regexp:regexp,excludes:excludes}}function markModelAsDirty(ngModel,files){null==files||ngModel.$dirty||(ngModel.$setDirty?ngModel.$setDirty():ngModel.$dirty=!0)}var upload=UploadDataUrl;return upload.validatePattern=function(file,val){if(!val)return!0;var pattern=globStringToRegex(val),valid=!0;if(pattern.regexp&&pattern.regexp.length){var regexp=new RegExp(pattern.regexp,"i");valid=null!=file.type&&regexp.test(file.type)||null!=file.name&&regexp.test(file.name)}for(var len=pattern.excludes.length;len--;){var exclude=new RegExp(pattern.excludes[len],"i");valid=valid&&(null==file.type||exclude.test(file.type))&&(null==file.name||exclude.test(file.name))}return valid},upload.ratioToFloat=function(val){var r=val.toString(),xIndex=r.search(/[x:]/i);return r=xIndex>-1?parseFloat(r.substring(0,xIndex))/parseFloat(r.substring(xIndex+1)):parseFloat(r)},upload.registerModelChangeValidator=function(ngModel,attr,scope){ngModel&&ngModel.$formatters.push(function(files){if(ngModel.$dirty){var filesArray=files;files&&!angular.isArray(files)&&(filesArray=[files]),upload.validate(filesArray,0,ngModel,attr,scope).then(function(){upload.applyModelValidation(ngModel,filesArray)})}return files})},upload.applyModelValidation=function(ngModel,files){markModelAsDirty(ngModel,files),angular.forEach(ngModel.$ngfValidations,function(validation){ngModel.$setValidity(validation.name,validation.valid)})},upload.getValidationAttr=function(attr,scope,name,validationName,file){var dName="ngf"+name[0].toUpperCase()+name.substr(1),val=upload.attrGetter(dName,attr,scope,{$file:file});if(null==val&&(val=upload.attrGetter("ngfValidate",attr,scope,{$file:file}))){var split=(validationName||name).split(".");val=val[split[0]],split.length>1&&(val=val&&val[split[1]])}return val},upload.validate=function(files,prevLength,ngModel,attr,scope){function validateSync(name,validationName,fn){if(files){for(var i=files.length,valid=null;i--;){var file=files[i];if(file){var val=upload.getValidationAttr(attr,scope,name,validationName,file);null!=val&&(fn(file,val,i)||(ignoredErrors.indexOf(name)===-1?(file.$error=name,(file.$errorMessages=file.$errorMessages||{})[name]=!0,file.$errorParam=val,invalidFiles.indexOf(file)===-1&&invalidFiles.push(file),runAllValidation||files.splice(i,1),valid=!1):files.splice(i,1)))}}null!==valid&&ngModel.$ngfValidations.push({name:name,valid:valid})}}function validateAsync(name,validationName,type,asyncFn,fn){function resolveResult(defer,file,val){function resolveInternal(fn){if(fn())if(ignoredErrors.indexOf(name)===-1){if(file.$error=name,(file.$errorMessages=file.$errorMessages||{})[name]=!0,file.$errorParam=val,invalidFiles.indexOf(file)===-1&&invalidFiles.push(file),!runAllValidation){var i=files.indexOf(file);i>-1&&files.splice(i,1)}defer.resolve(!1)}else{var j=files.indexOf(file);j>-1&&files.splice(j,1),defer.resolve(!0)}else defer.resolve(!0)}null!=val?asyncFn(file,val).then(function(d){resolveInternal(function(){return!fn(d,val)})},function(){resolveInternal(function(){return attrGetter("ngfValidateForce",{$file:file})})}):defer.resolve(!0)}var promises=[upload.emptyPromise(!0)];files&&(files=void 0===files.length?[files]:files,angular.forEach(files,function(file){var defer=$q.defer();return promises.push(defer.promise),!type||null!=file.type&&0===file.type.search(type)?void("dimensions"===name&&null!=upload.attrGetter("ngfDimensions",attr)?upload.imageDimensions(file).then(function(d){resolveResult(defer,file,attrGetter("ngfDimensions",{$file:file,$width:d.width,$height:d.height}))},function(){defer.resolve(!1)}):"duration"===name&&null!=upload.attrGetter("ngfDuration",attr)?upload.mediaDuration(file).then(function(d){resolveResult(defer,file,attrGetter("ngfDuration",{$file:file,$duration:d}))},function(){defer.resolve(!1)}):resolveResult(defer,file,upload.getValidationAttr(attr,scope,name,validationName,file))):void defer.resolve(!0)}));var deffer=$q.defer();return $q.all(promises).then(function(values){for(var isValid=!0,i=0;i<values.length;i++)if(!values[i]){isValid=!1;break}ngModel.$ngfValidations.push({name:name,valid:isValid}),deffer.resolve(isValid)}),deffer.promise}ngModel=ngModel||{},ngModel.$ngfValidations=ngModel.$ngfValidations||[],angular.forEach(ngModel.$ngfValidations,function(v){v.valid=!0});var attrGetter=function(name,params){return upload.attrGetter(name,attr,scope,params)},ignoredErrors=(upload.attrGetter("ngfIgnoreInvalid",attr,scope)||"").split(" "),runAllValidation=upload.attrGetter("ngfRunAllValidations",attr,scope);if(null==files||0===files.length)return upload.emptyPromise({validFiles:files,invalidFiles:[]});files=void 0===files.length?[files]:files.slice(0);var invalidFiles=[];validateSync("pattern",null,upload.validatePattern),validateSync("minSize","size.min",function(file,val){return file.size+.1>=upload.translateScalars(val)}),validateSync("maxSize","size.max",function(file,val){return file.size-.1<=upload.translateScalars(val)});var totalSize=0;if(validateSync("maxTotalSize",null,function(file,val){return totalSize+=file.size,!(totalSize>upload.translateScalars(val))||(files.splice(0,files.length),!1)}),validateSync("validateFn",null,function(file,r){return r===!0||null===r||""===r}),!files.length)return upload.emptyPromise({validFiles:[],invalidFiles:invalidFiles});var deffer=$q.defer(),promises=[];return promises.push(validateAsync("maxHeight","height.max",/image/,this.imageDimensions,function(d,val){return d.height<=val})),promises.push(validateAsync("minHeight","height.min",/image/,this.imageDimensions,function(d,val){return d.height>=val})),promises.push(validateAsync("maxWidth","width.max",/image/,this.imageDimensions,function(d,val){return d.width<=val})),promises.push(validateAsync("minWidth","width.min",/image/,this.imageDimensions,function(d,val){return d.width>=val})),promises.push(validateAsync("dimensions",null,/image/,function(file,val){return upload.emptyPromise(val)},function(r){return r})),promises.push(validateAsync("ratio",null,/image/,this.imageDimensions,function(d,val){for(var split=val.toString().split(","),valid=!1,i=0;i<split.length;i++)Math.abs(d.width/d.height-upload.ratioToFloat(split[i]))<.01&&(valid=!0);return valid})),promises.push(validateAsync("maxRatio","ratio.max",/image/,this.imageDimensions,function(d,val){return d.width/d.height-upload.ratioToFloat(val)<1e-4})),promises.push(validateAsync("minRatio","ratio.min",/image/,this.imageDimensions,function(d,val){return d.width/d.height-upload.ratioToFloat(val)>-1e-4})),promises.push(validateAsync("maxDuration","duration.max",/audio|video/,this.mediaDuration,function(d,val){return d<=upload.translateScalars(val)})),promises.push(validateAsync("minDuration","duration.min",/audio|video/,this.mediaDuration,function(d,val){return d>=upload.translateScalars(val)})),promises.push(validateAsync("duration",null,/audio|video/,function(file,val){return upload.emptyPromise(val)},function(r){return r})),promises.push(validateAsync("validateAsyncFn",null,null,function(file,val){return val},function(r){return r===!0||null===r||""===r})),$q.all(promises).then(function(){if(runAllValidation)for(var i=0;i<files.length;i++){var file=files[i];file.$error&&files.splice(i--,1)}runAllValidation=!1,validateSync("maxFiles",null,function(file,val,i){return prevLength+i<val}),deffer.resolve({validFiles:files,invalidFiles:invalidFiles})}),deffer.promise},upload.imageDimensions=function(file){if(file.$ngfWidth&&file.$ngfHeight){var d=$q.defer();return $timeout(function(){d.resolve({width:file.$ngfWidth,height:file.$ngfHeight})}),d.promise}if(file.$ngfDimensionPromise)return file.$ngfDimensionPromise;var deferred=$q.defer();return $timeout(function(){return 0!==file.type.indexOf("image")?void deferred.reject("not image"):void upload.dataUrl(file).then(function(dataUrl){function success(){var width=img[0].naturalWidth||img[0].clientWidth,height=img[0].naturalHeight||img[0].clientHeight;img.remove(),file.$ngfWidth=width,file.$ngfHeight=height,deferred.resolve({width:width,height:height})}function error(){img.remove(),deferred.reject("load error")}function checkLoadErrorInCaseOfNoCallback(){$timeout(function(){img[0].parentNode&&(img[0].clientWidth?success():secondsCounter++>10?error():checkLoadErrorInCaseOfNoCallback())},1e3)}var img=angular.element("<img>").attr("src",dataUrl).css("visibility","hidden").css("position","fixed").css("max-width","none !important").css("max-height","none !important");img.on("load",success),img.on("error",error);var secondsCounter=0;checkLoadErrorInCaseOfNoCallback(),angular.element(document.getElementsByTagName("body")[0]).append(img)},function(){deferred.reject("load error")})}),file.$ngfDimensionPromise=deferred.promise,file.$ngfDimensionPromise.finally(function(){delete file.$ngfDimensionPromise}),file.$ngfDimensionPromise},upload.mediaDuration=function(file){if(file.$ngfDuration){var d=$q.defer();return $timeout(function(){d.resolve(file.$ngfDuration)}),d.promise}if(file.$ngfDurationPromise)return file.$ngfDurationPromise;var deferred=$q.defer();return $timeout(function(){return 0!==file.type.indexOf("audio")&&0!==file.type.indexOf("video")?void deferred.reject("not media"):void upload.dataUrl(file).then(function(dataUrl){function success(){var duration=el[0].duration;file.$ngfDuration=duration,el.remove(),deferred.resolve(duration)}function error(){el.remove(),deferred.reject("load error")}function checkLoadError(){$timeout(function(){el[0].parentNode&&(el[0].duration?success():count>10?error():checkLoadError())},1e3)}var el=angular.element(0===file.type.indexOf("audio")?"<audio>":"<video>").attr("src",dataUrl).css("visibility","none").css("position","fixed");el.on("loadedmetadata",success),el.on("error",error);var count=0;checkLoadError(),angular.element(document.body).append(el)},function(){deferred.reject("load error")})}),file.$ngfDurationPromise=deferred.promise,file.$ngfDurationPromise.finally(function(){delete file.$ngfDurationPromise}),file.$ngfDurationPromise},upload}]);