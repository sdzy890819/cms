!function(){function linkDrop(scope,elem,attr,ngModel,$parse,$timeout,$window,upload,$http,$q){function isDisabled(){return elem.attr("disabled")||attrGetter("ngfDropDisabled",scope)}function extractFilesAndUpdateModel(source,evt,updateOnType){if(source){var html;try{html=source&&source.getData&&source.getData("text/html")}catch(e){}extractFiles(source.items,source.files,attrGetter("ngfAllowDir",scope)!==!1,attrGetter("multiple")||attrGetter("ngfMultiple",scope)).then(function(files){files.length?updateModel(files,evt):extractFilesFromHtml(updateOnType,html).then(function(files){updateModel(files,evt)})})}}function updateModel(files,evt){upload.updateModel(ngModel,attr,scope,attrGetter("ngfChange")||attrGetter("ngfDrop"),files,evt)}function extractFilesFromHtml(updateOn,html){if(!upload.shouldUpdateOn(updateOn,attr,scope)||"string"!=typeof html)return upload.rejectPromise([]);var urls=[];html.replace(/<(img src|img [^>]* src) *=\"([^\"]*)\"/gi,function(m,n,src){urls.push(src)});var promises=[],files=[];if(urls.length){angular.forEach(urls,function(url){promises.push(upload.urlToBlob(url).then(function(blob){files.push(blob)}))});var defer=$q.defer();return $q.all(promises).then(function(){defer.resolve(files)},function(e){defer.reject(e)}),defer.promise}return upload.emptyPromise()}function calculateDragOverClass(scope,attr,evt,callback){var obj=attrGetter("ngfDragOverClass",scope,{$event:evt}),dClass="dragover";if(angular.isString(obj))dClass=obj;else if(obj&&(obj.delay&&(dragOverDelay=obj.delay),obj.accept||obj.reject)){var items=evt.dataTransfer.items;if(null!=items&&items.length)for(var pattern=obj.pattern||attrGetter("ngfPattern",scope,{$event:evt}),len=items.length;len--;){if(!upload.validatePattern(items[len],pattern)){dClass=obj.reject;break}dClass=obj.accept}else dClass=obj.accept}callback(dClass)}function extractFiles(items,fileList,allowDir,multiple){function traverseFileTree(entry,path){var defer=$q.defer();if(null!=entry)if(entry.isDirectory){var promises=[upload.emptyPromise()];if(includeDir){var file={type:"directory"};file.name=file.path=(path||"")+entry.name,files.push(file)}var dirReader=entry.createReader(),entries=[],readEntries=function(){dirReader.readEntries(function(results){try{results.length?(entries=entries.concat(Array.prototype.slice.call(results||[],0)),readEntries()):(angular.forEach(entries.slice(0),function(e){files.length<=maxFiles&&totalSize<=maxTotalSize&&promises.push(traverseFileTree(e,(path?path:"")+entry.name+"/"))}),$q.all(promises).then(function(){defer.resolve()},function(e){defer.reject(e)}))}catch(e){defer.reject(e)}},function(e){defer.reject(e)})};readEntries()}else entry.file(function(file){try{file.path=(path?path:"")+file.name,includeDir&&(file=upload.rename(file,file.path)),files.push(file),totalSize+=file.size,defer.resolve()}catch(e){defer.reject(e)}},function(e){defer.reject(e)});return defer.promise}var maxFiles=upload.getValidationAttr(attr,scope,"maxFiles");null==maxFiles&&(maxFiles=Number.MAX_VALUE);var maxTotalSize=upload.getValidationAttr(attr,scope,"maxTotalSize");null==maxTotalSize&&(maxTotalSize=Number.MAX_VALUE);var includeDir=attrGetter("ngfIncludeDir",scope),files=[],totalSize=0,promises=[upload.emptyPromise()];if(items&&items.length>0&&"file:"!==$window.location.protocol)for(var i=0;i<items.length;i++){if(items[i].webkitGetAsEntry&&items[i].webkitGetAsEntry()&&items[i].webkitGetAsEntry().isDirectory){var entry=items[i].webkitGetAsEntry();if(entry.isDirectory&&!allowDir)continue;null!=entry&&promises.push(traverseFileTree(entry))}else{var f=items[i].getAsFile();null!=f&&(files.push(f),totalSize+=f.size)}if(files.length>maxFiles||totalSize>maxTotalSize||!multiple&&files.length>0)break}else if(null!=fileList)for(var j=0;j<fileList.length;j++){var file=fileList.item(j);if((file.type||file.size>0)&&(files.push(file),totalSize+=file.size),files.length>maxFiles||totalSize>maxTotalSize||!multiple&&files.length>0)break}var defer=$q.defer();return $q.all(promises).then(function(){if(multiple||includeDir||!files.length)defer.resolve(files);else{for(var i=0;files[i]&&"directory"===files[i].type;)i++;defer.resolve([files[i]])}},function(e){defer.reject(e)}),defer.promise}var available=dropAvailable(),attrGetter=function(name,scope,params){return upload.attrGetter(name,attr,scope,params)};if(attrGetter("dropAvailable")&&$timeout(function(){scope[attrGetter("dropAvailable")]?scope[attrGetter("dropAvailable")].value=available:scope[attrGetter("dropAvailable")]=available}),!available)return void(attrGetter("ngfHideOnDropNotAvailable",scope)===!0&&elem.css("display","none"));null==attrGetter("ngfSelect")&&upload.registerModelChangeValidator(ngModel,attr,scope);var actualDragOverClass,leaveTimeout=null,stopPropagation=$parse(attrGetter("ngfStopPropagation")),dragOverDelay=1;elem[0].addEventListener("dragover",function(evt){if(!isDisabled()&&upload.shouldUpdateOn("drop",attr,scope)){if(evt.preventDefault(),stopPropagation(scope)&&evt.stopPropagation(),navigator.userAgent.indexOf("Chrome")>-1){var b=evt.dataTransfer.effectAllowed;evt.dataTransfer.dropEffect="move"===b||"linkMove"===b?"move":"copy"}$timeout.cancel(leaveTimeout),actualDragOverClass||(actualDragOverClass="C",calculateDragOverClass(scope,attr,evt,function(clazz){actualDragOverClass=clazz,elem.addClass(actualDragOverClass),attrGetter("ngfDrag",scope,{$isDragging:!0,$class:actualDragOverClass,$event:evt})}))}},!1),elem[0].addEventListener("dragenter",function(evt){!isDisabled()&&upload.shouldUpdateOn("drop",attr,scope)&&(evt.preventDefault(),stopPropagation(scope)&&evt.stopPropagation())},!1),elem[0].addEventListener("dragleave",function(evt){!isDisabled()&&upload.shouldUpdateOn("drop",attr,scope)&&(evt.preventDefault(),stopPropagation(scope)&&evt.stopPropagation(),leaveTimeout=$timeout(function(){actualDragOverClass&&elem.removeClass(actualDragOverClass),actualDragOverClass=null,attrGetter("ngfDrag",scope,{$isDragging:!1,$event:evt})},dragOverDelay||100))},!1),elem[0].addEventListener("drop",function(evt){!isDisabled()&&upload.shouldUpdateOn("drop",attr,scope)&&(evt.preventDefault(),stopPropagation(scope)&&evt.stopPropagation(),actualDragOverClass&&elem.removeClass(actualDragOverClass),actualDragOverClass=null,extractFilesAndUpdateModel(evt.dataTransfer,evt,"dropUrl"))},!1),elem[0].addEventListener("paste",function(evt){navigator.userAgent.toLowerCase().indexOf("firefox")>-1&&attrGetter("ngfEnableFirefoxPaste",scope)&&evt.preventDefault(),!isDisabled()&&upload.shouldUpdateOn("paste",attr,scope)&&extractFilesAndUpdateModel(evt.clipboardData||evt.originalEvent.clipboardData,evt,"pasteUrl")},!1),navigator.userAgent.toLowerCase().indexOf("firefox")>-1&&attrGetter("ngfEnableFirefoxPaste",scope)&&(elem.attr("contenteditable",!0),elem.on("keypress",function(e){e.metaKey||e.ctrlKey||e.preventDefault()}))}function dropAvailable(){var div=document.createElement("div");return"draggable"in div&&"ondrop"in div&&!/Edge\/12./i.test(navigator.userAgent)}ngFileUpload.directive("ngfDrop",["$parse","$timeout","$window","Upload","$http","$q",function($parse,$timeout,$window,Upload,$http,$q){return{restrict:"AEC",require:"?ngModel",link:function(scope,elem,attr,ngModel){linkDrop(scope,elem,attr,ngModel,$parse,$timeout,$window,Upload,$http,$q)}}}]),ngFileUpload.directive("ngfNoFileDrop",function(){return function(scope,elem){dropAvailable()&&elem.css("display","none")}}),ngFileUpload.directive("ngfDropAvailable",["$parse","$timeout","Upload",function($parse,$timeout,Upload){return function(scope,elem,attr){if(dropAvailable()){var model=$parse(Upload.attrGetter("ngfDropAvailable",attr));$timeout(function(){model(scope),model.assign&&model.assign(scope,!0)})}}}])}();