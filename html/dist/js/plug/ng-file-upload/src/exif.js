// customized version of https://github.com/exif-js/exif-js
ngFileUpload.service("UploadExif",["UploadResize","$q",function(UploadResize,$q){function applyTransform(ctx,orientation,width,height){switch(orientation){case 2:return ctx.transform(-1,0,0,1,width,0);case 3:return ctx.transform(-1,0,0,-1,width,height);case 4:return ctx.transform(1,0,0,-1,0,height);case 5:return ctx.transform(0,1,1,0,0,0);case 6:return ctx.transform(0,1,-1,0,height,0);case 7:return ctx.transform(0,-1,-1,0,height,width);case 8:return ctx.transform(0,-1,1,0,0,width)}}function arrayBufferToBase64(buffer){for(var binary="",bytes=new Uint8Array(buffer),len=bytes.byteLength,i=0;i<len;i++)binary+=String.fromCharCode(bytes[i]);return window.btoa(binary)}var upload=UploadResize;return upload.isExifSupported=function(){return window.FileReader&&(new FileReader).readAsArrayBuffer&&upload.isResizeSupported()},upload.readOrientation=function(file){var defer=$q.defer(),reader=new FileReader,slicedFile=file.slice?file.slice(0,65536):file;return reader.readAsArrayBuffer(slicedFile),reader.onerror=function(e){return defer.reject(e)},reader.onload=function(e){var result={orientation:1},view=new DataView(this.result);if(65496!==view.getUint16(0,!1))return defer.resolve(result);for(var length=view.byteLength,offset=2;offset<length;){var marker=view.getUint16(offset,!1);if(offset+=2,65505===marker){if(1165519206!==view.getUint32(offset+=2,!1))return defer.resolve(result);var little=18761===view.getUint16(offset+=6,!1);offset+=view.getUint32(offset+4,little);var tags=view.getUint16(offset,little);offset+=2;for(var i=0;i<tags;i++)if(274===view.getUint16(offset+12*i,little)){var orientation=view.getUint16(offset+12*i+8,little);return orientation>=2&&orientation<=8&&(view.setUint16(offset+12*i+8,1,little),result.fixedArrayBuffer=e.target.result),result.orientation=orientation,defer.resolve(result)}}else{if(65280!==(65280&marker))break;offset+=view.getUint16(offset,!1)}}return defer.resolve(result)},defer.promise},upload.applyExifRotation=function(file){if(0!==file.type.indexOf("image/jpeg"))return upload.emptyPromise(file);var deferred=$q.defer();return upload.readOrientation(file).then(function(result){return result.orientation<2||result.orientation>8?deferred.resolve(file):void upload.dataUrl(file,!0).then(function(url){var canvas=document.createElement("canvas"),img=document.createElement("img");img.onload=function(){try{canvas.width=result.orientation>4?img.height:img.width,canvas.height=result.orientation>4?img.width:img.height;var ctx=canvas.getContext("2d");applyTransform(ctx,result.orientation,img.width,img.height),ctx.drawImage(img,0,0);var dataUrl=canvas.toDataURL(file.type||"image/WebP",.934);dataUrl=upload.restoreExif(arrayBufferToBase64(result.fixedArrayBuffer),dataUrl);var blob=upload.dataUrltoBlob(dataUrl,file.name);deferred.resolve(blob)}catch(e){return deferred.reject(e)}},img.onerror=function(){deferred.reject()},img.src=url},function(e){deferred.reject(e)})},function(e){deferred.reject(e)}),deferred.promise},upload.restoreExif=function(orig,resized){var ExifRestorer={};return ExifRestorer.KEY_STR="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",ExifRestorer.encode64=function(input){var chr1,chr2,enc1,enc2,enc3,output="",chr3="",enc4="",i=0;do chr1=input[i++],chr2=input[i++],chr3=input[i++],enc1=chr1>>2,enc2=(3&chr1)<<4|chr2>>4,enc3=(15&chr2)<<2|chr3>>6,enc4=63&chr3,isNaN(chr2)?enc3=enc4=64:isNaN(chr3)&&(enc4=64),output=output+this.KEY_STR.charAt(enc1)+this.KEY_STR.charAt(enc2)+this.KEY_STR.charAt(enc3)+this.KEY_STR.charAt(enc4),chr1=chr2=chr3="",enc1=enc2=enc3=enc4="";while(i<input.length);return output},ExifRestorer.restore=function(origFileBase64,resizedFileBase64){origFileBase64.match("data:image/jpeg;base64,")&&(origFileBase64=origFileBase64.replace("data:image/jpeg;base64,",""));var rawImage=this.decode64(origFileBase64),segments=this.slice2Segments(rawImage),image=this.exifManipulation(resizedFileBase64,segments);return"data:image/jpeg;base64,"+this.encode64(image)},ExifRestorer.exifManipulation=function(resizedFileBase64,segments){var exifArray=this.getExifArray(segments),newImageArray=this.insertExif(resizedFileBase64,exifArray);return new Uint8Array(newImageArray)},ExifRestorer.getExifArray=function(segments){for(var seg,x=0;x<segments.length;x++)if(seg=segments[x],255===seg[0]&225===seg[1])return seg;return[]},ExifRestorer.insertExif=function(resizedFileBase64,exifArray){var imageData=resizedFileBase64.replace("data:image/jpeg;base64,",""),buf=this.decode64(imageData),separatePoint=buf.indexOf(255,3),mae=buf.slice(0,separatePoint),ato=buf.slice(separatePoint),array=mae;return array=array.concat(exifArray),array=array.concat(ato)},ExifRestorer.slice2Segments=function(rawImageArray){for(var head=0,segments=[];;){if(255===rawImageArray[head]&218===rawImageArray[head+1])break;if(255===rawImageArray[head]&216===rawImageArray[head+1])head+=2;else{var length=256*rawImageArray[head+2]+rawImageArray[head+3],endPoint=head+length+2,seg=rawImageArray.slice(head,endPoint);segments.push(seg),head=endPoint}if(head>rawImageArray.length)break}return segments},ExifRestorer.decode64=function(input){var chr1,chr2,enc1,enc2,enc3,chr3="",enc4="",i=0,buf=[],base64test=/[^A-Za-z0-9\+\/\=]/g;base64test.exec(input)&&console.log("There were invalid base64 characters in the input text.\nValid base64 characters are A-Z, a-z, 0-9, NaNExpect errors in decoding."),input=input.replace(/[^A-Za-z0-9\+\/\=]/g,"");do enc1=this.KEY_STR.indexOf(input.charAt(i++)),enc2=this.KEY_STR.indexOf(input.charAt(i++)),enc3=this.KEY_STR.indexOf(input.charAt(i++)),enc4=this.KEY_STR.indexOf(input.charAt(i++)),chr1=enc1<<2|enc2>>4,chr2=(15&enc2)<<4|enc3>>2,chr3=(3&enc3)<<6|enc4,buf.push(chr1),64!==enc3&&buf.push(chr2),64!==enc4&&buf.push(chr3),chr1=chr2=chr3="",enc1=enc2=enc3=enc4="";while(i<input.length);return buf},ExifRestorer.restore(orig,resized)},upload}]);