/**!
 * AngularJS file upload directives and services. Supoorts: file upload/drop/paste, resume, cancel/abort,
 * progress, resize, thumbnail, preview, validation and CORS
 * @author  Danial  <danial.farid@gmail.com>
 * @version <%= pkg.version %>
 */
!window.XMLHttpRequest||window.FileAPI&&FileAPI.shouldLoad||(window.XMLHttpRequest.prototype.setRequestHeader=function(orig){return function(header,value){if("__setXHR_"===header){var val=value(this);val instanceof Function&&val(this)}else orig.apply(this,arguments)}}(window.XMLHttpRequest.prototype.setRequestHeader));var ngFileUpload=angular.module("ngFileUpload",[]);ngFileUpload.version="<%= pkg.version %>",ngFileUpload.service("UploadBase",["$http","$q","$timeout",function($http,$q,$timeout){function sendHttp(config){function notifyProgress(e){deferred.notify&&deferred.notify(e),promise.progressFunc&&$timeout(function(){promise.progressFunc(e)})}function getNotifyEvent(n){return null!=config._start&&resumeSupported?{loaded:n.loaded+config._start,total:config._file&&config._file.size||n.total,type:n.type,config:config,lengthComputable:!0,target:n.target}:n}function uploadWithAngular(){$http(config).then(function(r){if(resumeSupported&&config._chunkSize&&!config._finished&&config._file){var fileSize=config._file&&config._file.size||0;notifyProgress({loaded:Math.min(config._end,fileSize),total:fileSize,config:config,type:"progress"}),upload.upload(config,!0)}else config._finished&&delete config._finished,deferred.resolve(r)},function(e){deferred.reject(e)},function(n){deferred.notify(n)})}config.method=config.method||"POST",config.headers=config.headers||{};var deferred=config._deferred=config._deferred||$q.defer(),promise=deferred.promise;return config.disableProgress||(config.headers.__setXHR_=function(){return function(xhr){xhr&&xhr.upload&&xhr.upload.addEventListener&&(config.__XHR=xhr,config.xhrFn&&config.xhrFn(xhr),xhr.upload.addEventListener("progress",function(e){e.config=config,notifyProgress(getNotifyEvent(e))},!1),xhr.upload.addEventListener("load",function(e){e.lengthComputable&&(e.config=config,notifyProgress(getNotifyEvent(e)))},!1))}}),resumeSupported?config._chunkSize&&config._end&&!config._finished?(config._start=config._end,config._end+=config._chunkSize,uploadWithAngular()):config.resumeSizeUrl?$http.get(config.resumeSizeUrl).then(function(resp){config.resumeSizeResponseReader?config._start=config.resumeSizeResponseReader(resp.data):config._start=parseInt((null==resp.data.size?resp.data:resp.data.size).toString()),config._chunkSize&&(config._end=config._start+config._chunkSize),uploadWithAngular()},function(e){throw e}):config.resumeSize?config.resumeSize().then(function(size){config._start=size,config._chunkSize&&(config._end=config._start+config._chunkSize),uploadWithAngular()},function(e){throw e}):(config._chunkSize&&(config._start=0,config._end=config._start+config._chunkSize),uploadWithAngular()):uploadWithAngular(),promise.success=function(fn){return promise.then(function(response){fn(response.data,response.status,response.headers,config)}),promise},promise.error=function(fn){return promise.then(null,function(response){fn(response.data,response.status,response.headers,config)}),promise},promise.progress=function(fn){return promise.progressFunc=fn,promise.then(null,null,function(n){fn(n)}),promise},promise.abort=promise.pause=function(){return config.__XHR&&$timeout(function(){config.__XHR.abort()}),promise},promise.xhr=function(fn){return config.xhrFn=function(origXhrFn){return function(){origXhrFn&&origXhrFn.apply(promise,arguments),fn.apply(promise,arguments)}}(config.xhrFn),promise},upload.promisesCount++,promise.finally&&promise.finally instanceof Function&&promise.finally(function(){upload.promisesCount--}),promise}function copy(obj){var clone={};for(var key in obj)obj.hasOwnProperty(key)&&(clone[key]=obj[key]);return clone}var upload=this;upload.promisesCount=0,this.isResumeSupported=function(){return window.Blob&&window.Blob.prototype.slice};var resumeSupported=this.isResumeSupported();this.isUploadInProgress=function(){return upload.promisesCount>0},this.rename=function(file,name){return file.ngfName=name,file},this.jsonBlob=function(val){null==val||angular.isString(val)||(val=JSON.stringify(val));var blob=new window.Blob([val],{type:"application/json"});return blob._ngfBlob=!0,blob},this.json=function(val){return angular.toJson(val)},this.isFile=function(file){return null!=file&&(file instanceof window.Blob||file.flashId&&file.name&&file.size)},this.upload=function(config,internal){function toResumeFile(file,formData){if(file._ngfBlob)return file;if(config._file=config._file||file,null!=config._start&&resumeSupported){config._end&&config._end>=file.size&&(config._finished=!0,config._end=file.size);var slice=file.slice(config._start,config._end||file.size);return slice.name=file.name,slice.ngfName=file.ngfName,config._chunkSize&&(formData.append("_chunkSize",config._chunkSize),formData.append("_currentChunkSize",config._end-config._start),formData.append("_chunkNumber",Math.floor(config._start/config._chunkSize)),formData.append("_totalSize",config._file.size)),slice}return file}function addFieldToFormData(formData,val,key){if(void 0!==val)if(angular.isDate(val)&&(val=val.toISOString()),angular.isString(val))formData.append(key,val);else if(upload.isFile(val)){var file=toResumeFile(val,formData),split=key.split(",");split[1]&&(file.ngfName=split[1].replace(/^\s+|\s+$/g,""),key=split[0]),config._fileKey=config._fileKey||key,formData.append(key,file,file.ngfName||file.name)}else if(angular.isObject(val)){if(val.$$ngfCircularDetection)throw"ngFileUpload: Circular reference in config.data. Make sure specified data for Upload.upload() has no circular reference: "+key;val.$$ngfCircularDetection=!0;try{for(var k in val)if(val.hasOwnProperty(k)&&"$$ngfCircularDetection"!==k){var objectKey=null==config.objectKey?"[i]":config.objectKey;val.length&&parseInt(k)>-1&&(objectKey=null==config.arrayKey?objectKey:config.arrayKey),addFieldToFormData(formData,val[k],key+objectKey.replace(/[ik]/g,k))}}finally{delete val.$$ngfCircularDetection}}else formData.append(key,val)}return internal||(config=copy(config)),config._isDigested||(config._isDigested=!0,function(){config._chunkSize=upload.translateScalars(config.resumeChunkSize),config._chunkSize=config._chunkSize?parseInt(config._chunkSize.toString()):null,config.headers=config.headers||{},config.headers["Content-Type"]=void 0,config.transformRequest=config.transformRequest?angular.isArray(config.transformRequest)?config.transformRequest:[config.transformRequest]:[],config.transformRequest.push(function(data){var key,formData=new window.FormData;data=data||config.fields||{},config.file&&(data.file=config.file);for(key in data)if(data.hasOwnProperty(key)){var val=data[key];config.formDataAppender?config.formDataAppender(formData,key,val):addFieldToFormData(formData,val,key)}return formData})}()),sendHttp(config)},this.http=function(config){return config=copy(config),config.transformRequest=config.transformRequest||function(data){return window.ArrayBuffer&&data instanceof window.ArrayBuffer||data instanceof window.Blob?data:$http.defaults.transformRequest[0].apply(this,arguments)},config._chunkSize=upload.translateScalars(config.resumeChunkSize),config._chunkSize=config._chunkSize?parseInt(config._chunkSize.toString()):null,sendHttp(config)},this.translateScalars=function(str){if(angular.isString(str)){if(str.search(/kb/i)===str.length-2)return parseFloat(1024*str.substring(0,str.length-2));if(str.search(/mb/i)===str.length-2)return parseFloat(1048576*str.substring(0,str.length-2));if(str.search(/gb/i)===str.length-2)return parseFloat(1073741824*str.substring(0,str.length-2));if(str.search(/b/i)===str.length-1)return parseFloat(str.substring(0,str.length-1));if(str.search(/s/i)===str.length-1)return parseFloat(str.substring(0,str.length-1));if(str.search(/m/i)===str.length-1)return parseFloat(60*str.substring(0,str.length-1));if(str.search(/h/i)===str.length-1)return parseFloat(3600*str.substring(0,str.length-1))}return str},this.urlToBlob=function(url){var defer=$q.defer();return $http({url:url,method:"get",responseType:"arraybuffer"}).then(function(resp){var arrayBufferView=new Uint8Array(resp.data),type=resp.headers("content-type")||"image/WebP",blob=new window.Blob([arrayBufferView],{type:type}),matches=url.match(/.*\/(.+?)(\?.*)?$/);matches.length>1&&(blob.name=matches[1]),defer.resolve(blob)},function(e){defer.reject(e)}),defer.promise},this.setDefaults=function(defaults){this.defaults=defaults||{}},this.defaults={},this.version=ngFileUpload.version}]);