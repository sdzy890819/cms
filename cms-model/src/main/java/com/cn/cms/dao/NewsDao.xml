<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cn.cms.dao.NewsDao" >

    <resultMap id="base" type="com.cn.cms.po.Base">
        <id column="id" property="id" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
        <result column="del_tag" property="delTag" />
        <result column="last_modify_user_id" property="lastModifyUserId" />
        <result column="create_user_id" property="createUserId" />
    </resultMap>

    <resultMap type="com.cn.cms.po.News" id="news" extends="base" >
        <result column="title" property="title" />
        <result column="sub_title" property="subTitle" />
        <result column="keyword" property="keyword" />
        <result column="description" property="description" />
        <result column="source" property="source" />
        <result column="author" property="author" />
        <result column="build_time" property="buildTime" />
        <result column="write_time" property="writeTime" />
        <result column="category_id" property="categoryId" />
        <result column="channel_id" property="channelId" />
        <result column="column_id" property="columnId" />
        <result column="write_user_id" property="writeUserId" />
        <result column="build_user_id" property="buildUserId" />
        <result column="platform" property="platform" />
        <result column="url" property="url" />
        <result column="relative_path" property="relativePath" />
        <result column="publish" property="publish" />
        <result column="field1" property="field1" />
        <result column="field2" property="field2" />
        <result column="field3" property="field3" />
        <result column="field4" property="field4" />
        <result column="field5" property="field5" />
        <result column="auto_publish" property="autoPublish" />
        <result column="timer" property="timer" />
        <result column="sort" property="sort" />
        <result column="image_url" property="imageUrl" />
        <result column="edit_publish_time" property="editPublishTime" />
        <result column="recommend" property="recommend" />
        <result column="stock_code" property="stockCode" />
        <result column="stock_name" property="stockName" />
        <result column="push_tag" property="pushTag" />

        <result column="recommend_title" property="recommendTitle" />
        <result column="recommend_description" property="recommendDescription" />
        <result column="recommend_images" property="recommendImages" />
        <result column="recommend_column_id" property="recommendColumnId" />
        <result column="recommend_time" property="recommendTime" />
        <result column="recommend_user_id" property="recommendUserId" />
    </resultMap>

    <resultMap id="newsRecommend" type="com.cn.cms.po.NewsRecommend" extends="news">

        <result column="recommend_title" property="recommendTitle" />
        <result column="recommend_description" property="recommendDescription" />
        <result column="recommend_images" property="recommendImages" />
        <result column="recommend_column_id" property="recommendColumnId" />
        <result column="recommend_time" property="recommendTime" />
        <result column="recommend_user_id" property="recommendUserId" />
    </resultMap>


    <sql id="delTag"> where del_tag = 1 </sql>

    <sql id="sql_column">
        id,last_modify_user_id,title,sub_title,keyword
        ,description,source,author,build_time,write_time,channel_id,column_id,write_user_id,build_user_id,platform,url,relative_path,publish,
        field1,field2,field3,field4,field5,auto_publish,timer,category_id,sort,image_url,edit_publish_time,create_user_id,stock_code,stock_name,push_tag
    </sql>

    <sql id="all_column">
        id,create_time,update_time,del_tag,last_modify_user_id,title,sub_title,keyword
        ,description,source,author,build_time,write_time,channel_id,column_id,write_user_id,build_user_id,platform,url,relative_path,publish,
        field1,field2,field3,field4,field5,auto_publish,timer,category_id,sort, recommend_title, recommend_description,
        recommend_images, recommend_column_id, recommend, recommend_user_id,image_url,edit_publish_time,create_user_id,stock_code,stock_name,push_tag,recommend_time
    </sql>

    <sql id="recommend_sql_column">
        id, title, description, recommend_title, recommend_description, recommend_images, recommend_column_id, recommend, recommend_user_id, url, sort,recommend_time
    </sql>

    <sql id="sql_column_simple">
        id,title,source,author,channel_id,column_id,write_user_id,platform,category_id,publish,update_time,build_time, sort, url ,last_modify_user_id,build_user_id,image_url,edit_publish_time
        ,recommend
    </sql>

    <sql id="sql_column_simple_1">
        id,build_user_id
    </sql>


    <select id="queryNewsCount" resultType="java.lang.Integer">
        select count(1) from news where
        <choose>
            <when test="delTag != null">
                del_tag = ${delTag}
            </when>
            <otherwise>
                del_tag = 1
            </otherwise>
        </choose>
        <if test="userId != null" >
            and write_user_id = #{userId}
        </if>
        <if test="publish != null" >
            and publish = ${publish}
        </if>;
    </select>
    
    <select id="queryNewsList" resultMap="news">
        select <include refid="sql_column_simple" /> from news where
        <choose>
            <when test="delTag != null">
                del_tag = ${delTag}
            </when>
            <otherwise>
                del_tag = 1
            </otherwise>
        </choose>
        <if test="userId != null" >
           and write_user_id = #{userId}
        </if>
        <if test="publish != null" >
            and publish = ${publish}
        </if>
        order by id desc limit ${page.start},${page.pageSize};
    </select>

    <select id="queryNewsLimit" resultMap="news">
        select <include refid="sql_column_simple" /> from news order by id desc limit ${page.start},${page.pageSize};
    </select>
    
    <select id="findNewsAndDetail" resultMap="news">
        select <include refid="all_column" /> from news where
        <choose>
            <when test="delTag != null">
                del_tag = ${delTag}
            </when>
            <otherwise>
                del_tag = 1
            </otherwise>
        </choose>
        and id = ${id};
    </select>


    <select id="findNewsAndDetailManage" resultMap="news">
        select <include refid="all_column" /> from news where id = ${id};
    </select>

    <select id="findNewsAndDetailManageList" resultMap="news">
        select <include refid="all_column" /> from news where id in
        <foreach collection="list" close=");" open="(" item="item" separator=",">
            ${item}
        </foreach>

    </select>


    <insert id="saveNews" useGeneratedKeys="true" keyProperty="p1.id">
        insert into news ( <include refid="sql_column"/> ) values (
        null,#{p1.lastModifyUserId},#{p1.title},#{p1.subTitle},#{p1.keyword},#{p1.description},#{p1.source}
        ,#{p1.author},#{p1.buildTime},#{p1.writeTime},${p1.channelId},${p1.columnId},#{p1.writeUserId},#{p1.buildUserId},${p1.platform},
        #{p1.url},#{p1.relativePath},${p1.publish},#{p1.field1},#{p1.field2},#{p1.field3},#{p1.field4},#{p1.field5}
        ,${p1.autoPublish},#{p1.timer},${p1.categoryId},${p1.sort},#{p1.imageUrl},#{p1.editPublishTime},#{p1.createUserId},#{p1.stockCode},#{p1.stockName},#{p1.pushTag});
    </insert>

    <update id="delNews">
        update news set last_modify_user_id = #{lastModifyUserId},del_tag = 0 where id = ${id} ;
    </update>

    <update id="recoverNews">
        update news set last_modify_user_id = #{lastModifyUserId},del_tag = 1 where id = ${id} ;
    </update>

    <update id="updateNews">
        update news
        <set>
            <if test="p1.title != null">
        title=#{p1.title},
            </if>
            <if test="p1.subTitle != null">
        sub_title=#{p1.subTitle},
            </if>
            <if test="p1.keyword != null">
        keyword=#{p1.keyword},
            </if>
            <if test="p1.description != null">
        description=#{p1.description},
            </if>
            <if test="p1.source != null">
        source=#{p1.source},
            </if>
            <if test="p1.author != null">
        author=#{p1.author},
            </if>
            <if test="p1.channelId != null">
        channel_id=${p1.channelId},
            </if>
            <if test="p1.columnId != null">
        column_id=${p1.columnId},
            </if>
            <if test="p1.url != null">
                url=#{p1.url},
            </if>
            <if test="p1.relativePath != null">
                relative_path=#{p1.relativePath},
            </if>
            <if test="p1.field1 != null">
                field1=#{p1.field1},
            </if>
            <if test="p1.field2 != null">
                field2=#{p1.field2},
            </if>
            <if test="p1.field3 != null">
                field3=#{p1.field3},
            </if>
            <if test="p1.field4 != null">
                field4=#{p1.field4},
            </if>
            <if test="p1.field5 != null">
                field5=#{p1.field5},
            </if>
            <if test="p1.autoPublish != null">
                auto_publish=${p1.autoPublish},
            </if>
            <if test="p1.categoryId != null" >
                category_id = ${p1.categoryId},
            </if>
            <if test="p1.imageUrl != null">
                image_url = #{p1.imageUrl},
            </if>
            edit_publish_time = #{p1.editPublishTime},
            timer=#{p1.timer},
            last_modify_user_id=#{p1.lastModifyUserId},
            update_time = now(),
            stock_code = #{p1.stockCode},
            stock_name = #{p1.stockName},
            push_tag = #{p1.pushTag}
        </set>
        where id = ${p1.id} ;
    </update>

    <select id="findNewsByColumnId" resultMap="news">
        select <include refid="all_column" /> from news <include refid="delTag" /> and publish = 1 and id in (select news_id from news_push_column where column_id = ${columnId})
        order by id desc limit ${page.start}, ${page.pageSize};
    </select>

    <select id="findNewsByColumnIdCount" resultType="java.lang.Integer">
        select count(1) from news <include refid="delTag" /> and publish = 1 and id in (select news_id from news_push_column where column_id = ${columnId})
    </select>

    <update id="publishNews" >
        update news
         <set>
          <if test="p1.editPublishTime != null">
              edit_publish_time = #{p1.editPublishTime},
          </if>
         url = #{p1.url},relative_path = #{p1.relativePath},publish = ${p1.publish}
        ,build_user_id = #{p1.buildUserId}, build_time = #{p1.buildTime}
         </set>
         where id = ${p1.id};
    </update>

    <select id="findNewsByAutoPublish" resultMap="news">
        select <include refid="sql_column_simple_1" /> from news <include refid="delTag" /> and publish = ${publish} and auto_publish=${autoPublish}
        and timer &lt;= #{timer};
    </select>

    <select id="findNewsByIds" resultMap="news">
        select <include refid="sql_column" /> from news <include refid="delTag" /> and id in
        <foreach collection="list" close=");" open="(" item="item" separator=",">
            ${item}
        </foreach>
    </select>

    <select id="findNewsRecommend" resultMap="newsRecommend">
      select <include refid="recommend_sql_column" /> from news <include refid="delTag"/> and id = ${id} ;
    </select>

    <select id="findNewsRecommendNear" resultMap="newsRecommend">
        select <include refid="recommend_sql_column" /> from news <include refid="delTag"/> and recommend = 1 order by sort,recommend_time desc limit ${start}, ${size};
    </select>

    <select id="findNewsRecommendManage" resultMap="newsRecommend">
        select <include refid="recommend_sql_column" /> from news where id = ${id} ;
    </select>


    <update id="updateNewsRecommend">
        update news
        <set>
              <if test="p1.sort != null">
                sort = ${p1.sort},
              </if>
            <if test="p1.recommendTitle != null">
                recommend_title = #{p1.recommendTitle},
            </if>
            <if test="p1.recommendDescription != null">
                recommend_description = #{p1.recommendDescription},
            </if>
            <if test="p1.recommendImages != null">
                recommend_images = #{p1.recommendImages},
            </if>
            <if test="p1.recommendColumnId != null">
                recommend_column_id = ${p1.recommendColumnId},
            </if>
            <if test="p1.recommendTime != null">
                recommend_time = #{p1.recommendTime},
            </if>
            recommend = ${p1.recommend},
            recommend_user_id = #{p1.recommendUserId}
        </set>
        where id = ${p1.id} ;
    </update>

    <select id="findListByRecommedColumnId" resultMap="newsRecommend">
        select <include refid="recommend_sql_column" /> from news <include refid="delTag"/>
        <if test="recommendColumnId != null">
        and recommend_column_id = ${recommendColumnId}
        </if>
        and recommend = 1
        order by sort DESC ,recommend_time DESC limit ${page.start}, ${page.pageSize};
    </select>


    <select id="findNewsListByRecommedColumnId" resultMap="news">
        select <include refid="all_column" /> from news <include refid="delTag"/>
        <if test="recommendColumnId != null">
            and recommend_column_id = ${recommendColumnId}
        </if>
        and recommend = 1
        order by sort DESC,recommend_time DESC limit ${page.start}, ${page.pageSize};
    </select>


    <select id="findListByRecommedColumnIdCount" resultType="java.lang.Integer">
        select count(1) from news <include refid="delTag"/>
        <if test="recommendColumnId != null">
            and recommend_column_id = ${recommendColumnId}
        </if>
        and recommend = 1;
    </select>

    <update id="updateRescind">
        update news
        <set>
            publish = ${p1.publish},
            last_modify_user_id = #{p1.lastModifyUserId}
        </set>
        where id = ${p1.id};
    </update>

    <select id="queryNewsRecommendCount" resultType="java.lang.Integer">
        select count(1) from news <include refid="delTag"/>
        <if test="recommendColumnId != null">
            and recommend_column_id = ${recommendColumnId}
        </if>
        and recommend = 1 ;
    </select>

    <update id="deleteRecommend">
        update news set recommend = 0, recommend_column_id = null,
        recommend_title = null, recommend_description = null,
        recommend_images = null, recommend_column_id = null,
        recommend_user_id = null,recommend_time = null,
        sort = 0 where id = ${id};
    </update>


    <select id="findNewsIdWithColumnIds" resultType="java.lang.Long">
        select id from news <include refid="delTag"/>
        <if test="id != null">
            and id &lt; #{id}
        </if>
        <if test="columnId != null">
        and column_id = #{columnId}
        </if>
        order by id desc 
        limit ${pageSize}
    </select>

</mapper>