<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cn.cms.dao.FragmentDao" >

    <resultMap id="base" type="com.cn.cms.po.Base">
        <id column="id" property="id" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
        <result column="del_tag" property="delTag" />
        <result column="last_modify_user_id" property="lastModifyUserId" />
    </resultMap>

    <resultMap type="com.cn.cms.po.Fragment" id="fragment" extends="base" >
        <result column="fragment_classify_id" property="fragmentClassifyId" />
        <result column="fragment_content" property="fragmentContent" />
        <result column="fragment_name" property="fragmentName" />
        <result column="sort_num" property="sortNum" />
        <result column="fragment_model" property="fragmentModel" />
        <result column="channel_id" property="channelId" />
    </resultMap>


    <sql id="delTag"> where del_tag = 1 </sql>

    <sql id="sql_column">
        id,last_modify_user_id,fragment_classify_id,fragment_content,fragment_name,sort_num,fragment_model
        ,channel_id
    </sql>
    <sql id="sql_column_1">
        id,last_modify_user_id,fragment_classify_id,fragment_name,channel_id
    </sql>

    <select id="queryFragmentCount" resultType="java.lang.Integer">
        select count(1) from fragment <include refid="delTag" />;
    </select>

    <select id="queryFragmentList" resultMap="fragment">
        select <include refid="sql_column_1" /> from fragment <include refid="delTag" /> limit ${page.start},${page.pageSize};
    </select>

    <select id="searchFragementCount" resultType="java.lang.Integer">
        select count(1) from fragment <include refid="delTag" />
        <if test="p1.condition != null" >
            and fragment_name like '%#{p1.condition}%'
        </if>
        <if test="p1.fragmentClassifyId != null">
            and fragment_classify_id = ${p1.fragmentClassifyId}
        </if>
        <if test="p1.channelId != null ">
            and channel_id = ${p1.channelId}
        </if>
        ;
    </select>

    <select id="searchFragement" resultMap="fragment">
        select <include refid="sql_column_1" /> from fragment <include refid="delTag" />
        <if test="p1.condition != null" >
          and fragment_name like '%#{p1.condition}%'
        </if>
        <if test="p1.fragmentClassifyId != null">
          and fragment_classify_id = ${p1.fragmentClassifyId}
        </if>
        <if test="p1.channelId != null ">
            and channel_id = ${p1.channelId}
        </if>
         limit ${page.start},${page.pageSize};
    </select>

    <select id="findFragment" resultMap="fragment">
        select <include refid="sql_column" /> from fragment <include refid="delTag" /> and id = ${id};
    </select>

    <update id="delFragment" >
        update  fragment set last_modify_user_id = #{lastModifyUserId}, del_tag = 0 where id = ${id}
    </update>

    <update id="editFragment">
        update fragment set last_modify_user_id = #{p1.lastModifyUserId}, fragment_content = #{p1.fragmentContent} where id = ${p1.id};
    </update>

    <update id="updateFragment">
      update fragment
      <set>
          <if test="p1.fragmentClassifyId != null ">
            fragment_classify_id = ${p1.fragmentClassifyId},
          </if>
          <if test="p1.channelId != null ">
              channel_id = ${p1.channelId},
          </if>
          <if test="p1.fragmentName != null ">
            fragment_name = #{p1.fragmentName},
          </if>
          <if test="p1.sortNum != null ">
            sort_num = ${p1.sortNum} ,
          </if>
          <if test="p1.fragmentModel != null ">
            fragment_model = #{p1.fragmentModel},
          </if>
          last_modify_user_id = #{p1.lastModifyUserId}
      </set>
      where id = ${p1.id} ;
    </update>

    <insert id="saveFragment" useGeneratedKeys="true" keyProperty="p1.id">
      insert into fragment ( <include refid="sql_column"/> ) values
        ( null,#{p1.lastModifyUserId}, ${p1.fragmentClassifyId}, null, #{p1.fragmentName},
        ${p1.sortNum}, #{p1.fragmentModel},${p1.channelId});
    </insert>

</mapper>