<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cn.cms.dao.TemplateDao" >

    <resultMap id="base" type="com.cn.cms.po.Base">
        <id column="id" property="id" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
        <result column="del_tag" property="delTag" />
        <result column="last_modify_user_id" property="lastModifyUserId" />
    </resultMap>
    <resultMap type="com.cn.cms.po.Template" id="template" extends="base">
        <result column="template_name" property="templateName" />
        <result column="template_desc" property="templateDesc" />
        <result column="filename" property="filename" />
        <result column="path" property="path" />
        <result column="template_classify" property="templateClassify" />
        <result column="user_id" property="userId" />
        <result column="job" property="job" />
        <result column="encoded" property="encoded" />
        <result column="channel_id" property="channelId" />
        <result column="sort_num" property="sortNum" />
        <result column="publish" property="publish" />
    </resultMap>

    <sql id="delTag"> where del_tag = 1 </sql>

    <sql id="sql_column">
        id,last_modify_user_id,
        template_name,template_desc,filename,path,template_classify,user_id,job,encoded,channel_id,sort_num,publish
    </sql>

    <select id="queryTemplateCount" resultType="java.lang.Integer">
        select count(1) from template <include refid="delTag" />;
    </select>
    
    <select id="queryTemplateList" resultMap="template">
        select <include refid="sql_column" /> from template <include refid="delTag" /> limit ${page.start},${page.pageSize} ;
    </select>

    <select id="searchTemplateCount" resultType="java.lang.Integer">
        select count(1) from template <include refid="delTag" />
        <if test="p1.condition != null">
          and template_name like '%#{p1.condition}%'
        </if>
        <if test="p1.channelId != null">
          and channel_id = ${p1.channelId}
        </if>;
    </select>

    <select id="searchTemplate" resultMap="template">
        select <include refid="sql_column" /> from template <include refid="delTag" />
        <if test="p1.condition != null">
            and template_name like '%#{p1.condition}%'
        </if>
        <if test="p1.channelId != null">
            and channel_id = ${p1.channelId}
        </if> limit ${page.start},${page.pageSize};
    </select>

    <update id="delTemplate">
        update template set last_modify_user_id = #{lastModifyUserId}, del_tag = 0 where id = ${id};
    </update>

    <select id="getTemplate" resultMap="template">
        select <include refid="sql_column" /> from template <include refid="delTag" /> and id = ${id};
    </select>

    <insert id="saveTemplate" useGeneratedKeys="true" keyProperty="p1.id">
        insert into template ( <include refid="sql_column" /> ) values (
        null,#{p1.lastModifyUserId},#{p1.templateName},#{p1.templateDesc},#{p1.filename},#{p1.path},${p1.templateClassify},
        #{p1.userId},${p1.job},#{p1.encoded},${p1.channelId},${p1.sortNum},${p1.publish});
    </insert>

    <update id="updateTemplate">
        update template
        <set>
            <if test="p1.templateName != null">
                template_name = #{p1.templateName},
            </if>
            <if test="p1.templateDesc != null">
                template_desc = #{p1.templateDesc},
            </if>
            <if test="p1.filename != null">
                filename = #{p1.filename},
            </if>
            <if test="p1.path != null">
                path = #{p1.path},
            </if>
            <if test="p1.templateClassify != null">
                template_classify = ${p1.templateClassify},
            </if>
            <if test="p1.userId != null">
                user_id = #{p1.userId},
            </if>
            <if test="p1.job != null">
                job = #{p1.job},
            </if>
            <if test="p1.encoded != null">
                encoded = #{p1.encoded},
            </if>
            <if test="p1.channelId != null">
                channel_id = #{p1.channelId},
            </if>
            <if test="p1.sortNum != null">
                sort_num = #{p1.sortNum},
            </if>
            last_modify_user_id = #{lastModifyUserId}
        </set>

        where id = ${p1.id};
    </update>

    <select id="findTemplateListByRelation" resultMap="template">
        select <include refid="sql_column" /> from template <include refid="delTag"/> and id in (
        select template_id from template_relation where relation_type = ${relationType} and relation_id = ${relationId}
        ) and job = ${job} order by sort_num desc;
    </select>

    <update id="publishTemplate" >
        update template set publish=${publish} where id in
        <foreach collection="list" separator="," close=");" open="(" item="item">
            ${item}
        </foreach>

    </update>

    <select id="findTemplateListByAuto" resultMap="template">
        select <include refid="sql_column" /> from template <include refid="delTag" /> and template_classify != ${templateClassify}
        and job = ${job} ;
    </select>

    <select id="findTemplateByChannel" resultMap="template">
        select <include refid="sql_column" /> from template <include refid="delTag" /> and job = ${job}
        and template_classify = ${templateClassify} and channel_id = ${channelId} and id in (
        select template_id from template_relation where relation_type = ${relationType} and relation_id = ${relationId}
        ) limit 1;
    </select>

    <select id="findTemplateList" resultMap="template">
        select <include refid="sql_column" /> from template <include refid="delTag" /> and job = ${job}
        and template_classify = ${templateClassify} and channel_id = ${channelId} order by sort_num desc limit 1 ;
    </select>

</mapper>